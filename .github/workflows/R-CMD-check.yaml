name: R-CMD-check

# Trigger the workflow on push or pull request to main or master branches
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release'}
          - {os: ubuntu-20.04, r: 'devel'}
          - {os: windows-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v2

      # Step 2: Set up R environment
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      # Step 3: Update Package Managers
      - name: Update Package Managers
        if: runner.os == 'macOS' || runner.os == 'Linux'
        run: |
          if [[ $RUNNER_OS == "macOS" ]]; then
            brew update
          else
            sudo apt-get update
          fi

      # Step 4: Install System Dependencies
      - name: Install system dependencies
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          if [[ $RUNNER_OS == "macOS" ]]; then
            # Install Homebrew dependencies for macOS
            brew install qpdf pkgconfig checkbashisms || echo "Dependencies already installed."
          else
            # Install Linux dependencies via apt-get
            sudo apt-get install -y qpdf pkg-config checkbashisms
          fi

      # Step 5: Install R Dependencies
      - name: Install R dependencies
        run: |
          install.packages('remotes')
          remotes::install_deps(dependencies = TRUE)

      # Step 6: Run R CMD Check
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      # Step 7: Upload Check Results (if failure occurs)
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

